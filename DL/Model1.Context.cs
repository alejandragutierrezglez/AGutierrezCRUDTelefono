//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AGutierrezCRUDTelefonoEntities : DbContext
    {
        public AGutierrezCRUDTelefonoEntities()
            : base("name=AGutierrezCRUDTelefonoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Telefono> Telefonoes { get; set; }
    
        public virtual int TelefonoAdd(string marca, string modelo, string numSerie)
        {
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var numSerieParameter = numSerie != null ?
                new ObjectParameter("NumSerie", numSerie) :
                new ObjectParameter("NumSerie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TelefonoAdd", marcaParameter, modeloParameter, numSerieParameter);
        }
    
        public virtual int TelefonoDelete(Nullable<int> idTelefono)
        {
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("IdTelefono", idTelefono) :
                new ObjectParameter("IdTelefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TelefonoDelete", idTelefonoParameter);
        }
    
        public virtual ObjectResult<TelefonoGetAll_Result> TelefonoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TelefonoGetAll_Result>("TelefonoGetAll");
        }
    
        public virtual ObjectResult<TelefonoGetById_Result> TelefonoGetById(Nullable<int> idTelefono)
        {
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("IdTelefono", idTelefono) :
                new ObjectParameter("IdTelefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TelefonoGetById_Result>("TelefonoGetById", idTelefonoParameter);
        }
    
        public virtual int TelefonoUpdate(Nullable<int> idTelefono, string marca, string modelo, string numSerie)
        {
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("IdTelefono", idTelefono) :
                new ObjectParameter("IdTelefono", typeof(int));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var numSerieParameter = numSerie != null ?
                new ObjectParameter("NumSerie", numSerie) :
                new ObjectParameter("NumSerie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TelefonoUpdate", idTelefonoParameter, marcaParameter, modeloParameter, numSerieParameter);
        }
    }
}
